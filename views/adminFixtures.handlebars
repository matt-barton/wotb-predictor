<style type="text/css">
	.pointer:hover {
		cursor: pointer;
	}
	.hidden {
		display: none;
	}
</style>

<span class="alpha">Fixtures Adminisatration</span>

<div  class="float--right">
	<button type="button" class="btn btn--negative post-fixtures">Save Details</button>
</div>

<div id="first" class="grid page-block eleven-twelfths">
	<div class="grid__item one-whole">
		<span class="delta">Current Game</span>
	</div><!--
 --><div class="grid__item one-quarter">
 		Name
 	</div><!--
  --><div class="grid__item one-quarter">
		<input type="text" value="{{currentSeason.name}}" id="seasonName" size="12" />
	</div>
</div>

{{#each currentSeason.miniseasons}}
<div class="grid page-block eleven-twelfths season-block">
	<div class="grid__item one-whole">
		<span class="delta">{{name}}</span>
	</div><!--
 --><div class="grid__item one-third">
		<span class="Epsilon">Predictions Deadline</span>
	</div><!--
 --><div class="grid__item two-thirds">
		<input type="text" class="miniseason-deadline text-input" id="{{miniseasonHtmlId}}-deadline" value="{{deadline}}" size="12" />
	</div><!--
 --><div class="grid__item one-third">
		<span class="epsilon">Fixtures</span>
	</div><!--
 --><div class="grid__item two-thirds">
		<div class="grid" id="{{miniseasonHtmlId}}-fixtures-grid"><!--
			{{#each fixtures}}
		 --><div class="fixture-block"><!--
		 	 --><div class="grid__item three-eighths">
					<input type="text" id="{{miniseasonHtmlId}}-{{fixtureHtmlId}}-fixture-team" class="fixture-team input-text fixture-input" size="12" value="{{team}}" />
				</div><!--
		 	 --><div class="grid__item two-eighths">
					<select id="{{miniseasonHtmlId}}-{{fixtureHtmlId}}-fixture-venue" class="fixture-venue fixture-input">
						<option{{#compare venue '==' 'H'}} selected{{/compare}}>H</option>
						<option{{#compare venue '==' 'A'}} selected{{/compare}}>A</option>
					</select>
				</div><!--
		 	 --><div class="grid__item two-eighths">
					<input type="text" id="{{miniseasonHtmlId}}-{{fixtureHtmlId}}-fixture-date" class="fixture-date fixture-input text-input" id="newFixtureDate" size="12" value="{{date}}" readonly="readonly" />
				</div><!--
		 	 --><div class="grid__item one-eighth">
					<i class="fa fa-times wotb-delete-fixture pointer" title="Delete Fixture"></i>
				</div><!--
		 --></div><!--
		 	{{else}}
		 --><div id="{{miniseasonHtmlId}}-no-fixtures-div" class="grid__item one-whole">
		 		No fixtures yet.
		 	</div><!--
			{{/each}}
		 --><div class="grid__item one-whole">
		 		<i class="fa fa-plus wotb-trigger-add-controls pointer" id="{{miniseasonHtmlId}}-trigger-add-controls"></i> Add Fixture
		 	</div><!--
	 --></div>
	</div><!--
 --><div class="grid__item one-third add-fixture-controls-{{miniseasonHtmlId}}" style="display: none;"></div><!--
 --><div class="grid__item two-thirds add-fixture-controls-{{miniseasonHtmlId}}" style="display: none;">
 		<div class="grid"><!--
		 --><div class="grid__item three-eighths">
				<label class="epsilon">Team</label>
				<input type="text" size="12" class="fixture-team fixture-input text-input" id="{{miniseasonHtmlId}}-add-fixture-team" placeholder="team name" />
			</div><!--
		 --><div class="grid__item two-eighths">
				<label class="epsilon">Home/Away</label>
				<select id="{{miniseasonHtmlId}}-add-fixture-venue" class="fixture-input">
					<option></option>
					<option>H</option>
					<option>A</option>
				</select>
			</div><!--
		 --><div class="grid__item two-eighths">
				<label class="epsilon">Fixture Date</label>
				<input type="text" size="12" class="fixture-date text-input fixture-input" id="{{miniseasonHtmlId}}-add-fixture-date" placeholder="dd/mm/yyyy" readonly="readonly" />
			</div><!--
		 --><div class="grid__item one-eighth left bottom">
				<i id="{{miniseasonHtmlId}}-add-fixture-icon" class="fa fa-plus wotb-add-fixture pointer"></i>
			</div><!--
	 --></div>
	</div>
</div>
{{/each}}

<div>
	<button type="button" class="btn btn--negative post-fixtures">Save Details</button>
</div>

<script>
	$(document).ready(function(){

		// date pickers
		$('.miniseason-deadline').datepicker();
		$('.fixture-date').datepicker();

		// add fixture fields
		var removeErrorClass = function (el) {
			el.parent().removeClass('field-with-errors');
		};

		$('.fixture-input').keyup(function(){
			removeErrorClass($(this));
		});

		$('.fixture-input').change(function(){
			removeErrorClass($(this));
		});

		// delete buttons
		var deleteFixture = function() {
			var fixture = $(this).closest('.fixture-block');
			fixture.remove();
		};

		$('.wotb-delete-fixture').click(deleteFixture);

		// trigger add fixture controls
		$('.wotb-trigger-add-controls').click(function(){
			var miniSeasonId = $(this)
				.attr('id')
				.split('-')[0];
			$(this)
				.parent()
				.hide();
			$('.add-fixture-controls-' + miniSeasonId).slideDown(500);
		});
 
		// add fixture buttons
		$('.wotb-add-fixture').click(function(){
			var miniSeasonId = $(this)
				.attr('id')
				.split('-')[0];

			var fixtureDateField = $('#' + miniSeasonId + '-add-fixture-date');
			var fixtureTeamField = $('#' + miniSeasonId + '-add-fixture-team');
			var fixtureVenueField = $('#' + miniSeasonId + '-add-fixture-venue');
			var fixtureDate = fixtureDateField.val();
			var fixtureTeam = fixtureTeamField.val();
			var fixtureVenue = fixtureVenueField.val();

			if (!fixtureDate || !fixtureTeam || !fixtureVenue) {
				if (!fixtureDate) fixtureDateField.parent().addClass('field-with-errors');
				if (!fixtureTeam) fixtureTeamField.parent().addClass('field-with-errors');
				if (!fixtureVenue) fixtureVenueField.parent().addClass('field-with-errors');
				$.notify('Cannot add this fixture - information is missing', {
					className: 'error'
				});
				return;
			}

			var allFixtures = $('.fixture-block')
			  , processedFixtures = 0
			  , duplicate = false;

			allFixtures.each(function(i, fixture){
				if ($('.fixture-team', fixture).val().toLowerCase() == fixtureTeam.toLowerCase() && $('.fixture-venue', fixture).val() == fixtureVenue) {
					$.notify('Cannot add this fixture - duplicate team/fixture', {
						className: 'error'
					});
					duplicate = true;
				}

				if ($('.fixture-date', fixture).val() == fixtureDate) {
					$.notify('Cannot add this fixture - duplicate date', {
						className: 'error'
					});
					return;
					duplicate = true;
				}
				processedFixtures++;
			});

			var backstop = 0;
			while(processedFixtures < allFixtures.length) {
				backstop ++;
				if (backstop > 1000) {
					console.log('backstop prevents infinite loop')
					return;
				}
			}

			if (duplicate) return;

			if (Date.parse(fixtureDate) < Date.now()) {
				$.notify('Cannot add this fixture - date in the past', {
					className: 'error'
				});
				return;
			}

			var fixturesDiv = $('#' + miniSeasonId + '-fixtures-grid');
			var numberOfFixtures = $('.fixture-team', fixturesDiv).length;

			var teamDiv = $('<div class="grid__item three-eighths">')
					.css('display', 'none')
					.append($('<input type="text" />')
						.attr('id', miniSeasonId + '-' + numberOfFixtures + '-fixture-team')
						.attr('size', 12)
						.addClass('fixture-team')
						.addClass('input-text')
						.addClass('fixture-input')
					.val(fixtureTeam));
			var venueDiv = $('<div class="grid__item two-eighths">')
					.css('display', 'none')
					.append(
						$('<select>')
							.attr('id', miniSeasonId + '-' + numberOfFixtures + '-fixture-venue')
							.addClass('fixture-venue')
							.addClass('fixture-input')
							.append('<option' + (fixtureVenue == 'H' ? ' selected' : '') + '>H</option>')
							.append('<option' + (fixtureVenue == 'A' ? ' selected' : '') + '>A</option>'));
			var dateDiv = $('<div class="grid__item two-eighths">')
					.css('display', 'none')
					.append($('<input type="text" />')
						.attr('id', miniSeasonId + '-' + numberOfFixtures + '-fixture-date')
						.attr('size', 12)
						.attr('readonly', 'readonly')
						.addClass('fixture-date')
						.addClass('fixture-input')
						.addClass('input-text')
						.val(fixtureDate)
						.datepicker());
			var deleteDiv = $('<div class="grid__item one-eighth">')
				.css('display', 'none')
				.append($('<i class="fa fa-times pointer" title="Delete Fixture"></i>')
					.attr('id', miniSeasonId + '-' + numberOfFixtures + '-fixture-delete')
					.click(deleteFixture));

			$('#' + miniSeasonId + '-fixtures-grid')
				.append($('<div class="fixture-block">')
					.append(teamDiv)
					.append(venueDiv)
					.append(dateDiv)
					.append(deleteDiv));

			$('#' + miniSeasonId + '-no-fixtures-div').hide();
			teamDiv.show('slow');
			venueDiv.show('slow');
			dateDiv.show('slow');
			deleteDiv.show('slow');

			fixtureDateField.val('');
			fixtureTeamField.val('');
			fixtureVenueField.val('');

		});

		$('.post-fixtures').click(function(){
			
			var ok = true;
			var allFixtures = $('.fixture-block');
			var rowsWithErrors = [];

			$('.field-with-errors').removeClass('field-with-errors');

			var seasonNameField = $('#seasonName');
			if (seasonNameField.val().length == 0) {
				seasonNameField.parent().addClass('field-with-errors');
				$.notify('Cannot save fixtures - name cannot be blank.', {
					className: 'error'
				});
				ok = false;
			}

			var season = {
				name: seasonNameField.val(),
				miniseasons: []
			};

			for(var x=0; x<allFixtures.length; x++) {
				if (rowsWithErrors.indexOf(x) >= 0) continue;
				var team  = $('.fixture-team', allFixtures[x]).val()
				  , date  = $('.fixture-date', allFixtures[x]).val()
				  , venue = $('.fixture-venue', allFixtures[x]).val();

				if (!team || !date || !venue) {
					if (!date) $('.fixture-date', allFixtures[x]).parent().addClass('field-with-errors');
					if (!team) $('.fixture-team', allFixtures[x]).parent().addClass('field-with-errors');
					if (!venue) $('.fixture-venue', allFixtures[x]).parent().addClass('field-with-errors');
					$.notify('Cannot save fixtures - information is missing', {
						className: 'error'
					});
					ok = false;
				}

				for(var y=0; y<allFixtures.length; y++) {
					if (rowsWithErrors.indexOf(y) >= 0) continue;
					if (x==y) continue;

					if ($('.fixture-team', allFixtures[y]).val().toLowerCase() == team.toLowerCase() && 
						$('.fixture-venue', allFixtures[y]).val() == venue) {
						$.notify('Cannot save fixtures - team/venue duplicate', {
							className: 'error'
						});

						$('.fixture-team', allFixtures[y]).parent().addClass('field-with-errors');
						$('.fixture-venue', allFixtures[y]).parent().addClass('field-with-errors');
						$('.fixture-team', allFixtures[x]).parent().addClass('field-with-errors');
						$('.fixture-venue', allFixtures[x]).parent().addClass('field-with-errors');

						ok = false;
						if(!rowsWithErrors.indexOf(x)) rowsWithErrors.push(x);
						if(!rowsWithErrors.indexOf(y)) rowsWithErrors.push(y);
					}

					if ($('.fixture-date', allFixtures[y]).val() == date) {
						$.notify('Cannot save fixtures - duplicate date', {
							className: 'error'
						});

						$('.fixture-date', allFixtures[y]).parent().addClass('field-with-errors');
						$('.fixture-date', allFixtures[x]).parent().addClass('field-with-errors');

						ok = false;
						if(!rowsWithErrors.indexOf(x)) rowsWithErrors.push(x);
						if(!rowsWithErrors.indexOf(y)) rowsWithErrors.push(y);
					}
				}
			}

			if (!ok) return;

			$('.season-block').each(function(i, miniSeasonDiv){
				season.miniseasons[i] = {
					deadline: $('#' + i + '-deadline').val(),
					fixtures: []
				};
				$('.fixture-block', miniSeasonDiv).each(function(j, fixtureDiv){
					season.miniseasons[i].fixtures[j] = {
						team: $('#' + i + '-' + j + '-fixture-team').val(),
						venue: $('#' + i + '-' + j + '-fixture-venue').val(),
						date: $('#' + i + '-' + j + '-fixture-date').val()
					}
				});
			});

			$.blockUI({
				css: { 
		            border: 'none', 
		            padding: '15px', 
		            backgroundColor: '#000', 
		            '-webkit-border-radius': '10px', 
		            '-moz-border-radius': '10px', 
		            opacity: .5, 
		            color: '#fff' 
        		}
        	});

			$.ajax({
				type: 'post',
				url: '/saveFixtures',
				data: season,
				dataType: 'json',
				success: function(result){
					$.unblockUI();
					if (result.error) {
						$.notify(result.error, 'warn');
					}
					else {
						$.notify('Fixtures saved.', 'success');
					}
				},
				error: function(jqXHR, status, error){
					$.unblockUI();
					$.notify('Cannot save results. There was an error.', 'warn');
				}
			});
		});
	});


</script>
